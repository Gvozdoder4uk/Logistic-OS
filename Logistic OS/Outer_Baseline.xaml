<Activity mc:Ignorable="sap sap2010" x:Class="Outer_Baseline" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1267,2644" sap2010:WorkflowViewState.IdRef="Outer_Baseline_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Outer_Baseline Body" sap:VirtualizedContainerService.HintSize="999,2539" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Volume" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Open Inner File" sap:VirtualizedContainerService.HintSize="957,2447" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="Outer_BaseLine\TestFile.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="923,2338" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="Inner_OutData" />
              <Variable x:TypeArguments="x:Int32" Name="Start_Counter" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="881,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Start_Counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">6</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[Inner_OutData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="881,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="ИТОГ">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Open External Base" sap:VirtualizedContainerService.HintSize="881,2047" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="Outer_BaseLine\Outer_BaseLine.xlsx">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="847,1938" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[Inner_OutData]" DisplayName="FOR Inner Base" sap:VirtualizedContainerService.HintSize="805,1846" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="cell" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Write Into External Base" sap:VirtualizedContainerService.HintSize="755,1698" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelWriteCell Cell="[&quot;E&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="data" Text="[cell(&quot;IMO&quot;).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;G&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="data" Text="[cell(&quot;Судно&quot;).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;H&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="data" Text="[cell(&quot;Eta_Start&quot;).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;I&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="data" Text="[cell(&quot;Eta_end&quot;).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;J&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="data" Text="[cell(&quot;ETB&quot;).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;K&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="data" Text="[cell(&quot;ETD&quot;).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;M&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="data" Text="[cell(&quot;Товар&quot;).ToString]" />
                            <If Condition="[not cell(&quot;Страна назначения&quot;).ToString.Equals(&quot;N/A&quot;)]" sap:VirtualizedContainerService.HintSize="713,236" sap2010:WorkflowViewState.IdRef="If_1">
                              <If.Then>
                                <ui:ExcelWriteCell Cell="[&quot;Y&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="data" Text="[cell(&quot;Страна назначения&quot;).ToString]" />
                              </If.Then>
                              <If.Else>
                                <ui:ExcelWriteCell Cell="[&quot;Y&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="data" Text="unknown" />
                              </If.Else>
                            </If>
                            <ui:ExcelWriteCell Cell="[&quot;O&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="data" Text="[cell(&quot;Вес (тонн)&quot;).ToString.Split(Convert.ToChar(&quot;,&quot;))(0).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;R&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="data" Text="[cell(&quot;Причал&quot;).ToString]" />
                            <ui:ExcelWriteCell Cell="[&quot;S&quot; + Start_Counter.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="713,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="data" Text="[cell(&quot;№Причал&quot;).ToString]" />
                            <Assign sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[Start_Counter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[Start_Counter+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>